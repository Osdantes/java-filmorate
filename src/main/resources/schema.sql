DROP ALL OBJECTS;

CREATE TABLE IF NOT EXISTS users (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar,
  login varchar,
  email varchar,
  birthday date
);
CREATE UNIQUE INDEX IF NOT EXISTS users$id ON users (id);

CREATE TABLE friends (
    user_id int NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    friend_id int NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    status boolean,
    PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS mpa_dic (
  mpa_code integer PRIMARY KEY,
  mpa varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS directors (
    id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(200) NOT NULL
);

CREATE TABLE IF NOT EXISTS films (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar,
  description text,
  duration integer,
  mpa_code integer REFERENCES mpa_dic (mpa_code) ON DELETE SET NULL,
  release_date date
);
CREATE UNIQUE INDEX IF NOT EXISTS films$id ON films (id);

CREATE TABLE IF NOT EXISTS reviews (
    id int PRIMARY KEY AUTO_INCREMENT NOT NULL,
    content varchar(500) NOT NULL,
    is_positive boolean NOT NULL,
    user_id int NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    film_id int NOT NULL REFERENCES films (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS review_like(
    review_id int NOT NULL REFERENCES reviews (id) ON DELETE CASCADE,
    user_id int NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    useful int NOT NULL,
    PRIMARY KEY (review_id, user_id)
);

CREATE TABLE IF NOT EXISTS events (
    id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    timestamp numeric,
    operation varchar(20),
    event_type varchar(20),
    user_id integer NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    entity_id integer NOT NULL
);

CREATE TABLE IF NOT EXISTS film_directors (
  film_id integer REFERENCES films (id) ON DELETE CASCADE,
  director_id integer REFERENCES directors (id) ON DELETE CASCADE,
  PRIMARY KEY(film_id, director_id)
);

CREATE TABLE IF NOT EXISTS likes_link (
  user_id integer REFERENCES users (id) ON DELETE CASCADE,
  film_id integer REFERENCES films (id) ON DELETE CASCADE,
  PRIMARY KEY(user_id, film_id)
);
CREATE INDEX IF NOT EXISTS likes_link$uid ON likes_link (user_id);
CREATE INDEX IF NOT EXISTS likes_link$fid ON likes_link (film_id);

CREATE TABLE IF NOT EXISTS genre_dic (
  genre_code integer PRIMARY KEY,
  genre varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS genre_link (
  film_id integer REFERENCES films (id) ON DELETE CASCADE,
  genre_code integer REFERENCES genre_dic (genre_code) ON DELETE SET NULL,
  PRIMARY KEY(film_id, genre_code)
);
CREATE INDEX IF NOT EXISTS genre_link$fid ON genre_link (film_id);